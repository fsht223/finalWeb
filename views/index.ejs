<!doctype html>
<html lang="en" class="h-100">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>NodeJs Project</title>
    <link rel="canonical" href="https://getbootstrap.com/docs/5.2/examples/cover/">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body class="d-flex h-100 text-center text-white bg-white">
    
      <div class="container d-flex w-100 h-100 p-3 mx-auto flex-column">
        <header class="mb-auto">
          <div>
            <h3 class="float-md-start mb-0 text-dark"><a class="text-dark text-decoration-none" href="/main">Portfolio</a></h3>
            <nav class="nav nav-masthead justify-content-center float-md-end">
              <form action="/post">
                <button class="btn btn-outline-dark btn-space" type="submit" >Add Post</button>
              </form>
              <h5 class="text-white">..</h5>
              <form action="/updatepost">
                <button class="btn btn-outline-dark btn-space" type="submit" >Update Post</button>
              </form>
              <h5 class="text-white">..</h5>
              <form action="/deletepost">
                <button class="btn btn-outline-dark btn-space" type="submit" >Delete Post</button>
              </form>
              <h5 class="text-white">..</h5>
              <form action="/logout?_method=DELETE" method="POST">
                <button class="btn btn-outline-dark" type="submit" >Logout</button>

              </form>
              
            </nav>
          </div>
        </header>

        <main class="px-3">
          <p class="lead text-dark">Welcome to my stand-up portfolio</p>
          <div class="row d-flex justify-content-center">
              <div class="col-md-9">
                  <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="false">
                      <div class="carousel-inner">
                          <!-- Carousel items will be dynamically generated here -->
                      </div>
                      <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                          <span class="visually-hidden">Previous</span>
                      </button>
                      <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                          <span class="carousel-control-next-icon" aria-hidden="true"></span>
                          <span class="visually-hidden">Next</span>
                      </button>
                  </div>
              </div>
               
          </div>
      </main>

      <footer class="mt-auto text-dark-50">
        <p class="text-dark">Alisher Ibrayev SE-2229</p>
      </footer>
    </div>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
      <script>
        // Fetch posts from the server
        axios.get('/products')
            .then(function(response) {
                const posts = response.data; // Array of posts
                const carouselInner = document.querySelector('.carousel-inner');
    
                // Loop through each post and create a carousel item
                posts.forEach(function(post, index) {
                    // Create a carousel item
                    const carouselItem = document.createElement('div');
                    carouselItem.classList.add('carousel-item');
    
                    // Set the active class for the first item
                    if (index === 0) {
                        carouselItem.classList.add('active');
                    }
    
                    // Create image element and set its attributes
                    const img = document.createElement('img');
                    img.src = post.image; // Set image URL
                    img.classList.add('d-block', 'w-100');
                    img.alt = 'Image';
    
                    // Create carousel caption div
                    const carouselCaption = document.createElement('div');
                    carouselCaption.classList.add('carousel-caption', 'd-none', 'd-md-block');
    
                    // Create heading element (h5) for post title
                    const title = document.createElement('h5');
                    title.textContent = post.name; // Set post title
    
                    // Create paragraph element (p) for post body
                    const body = document.createElement('p');
                    body.textContent = post.body; // Set post body
    
                    // Append title and body to the carousel caption
                    carouselCaption.appendChild(title);
                    carouselCaption.appendChild(body);
    
                    // Append image and carousel caption to carousel item
                    carouselItem.appendChild(img);
                    carouselItem.appendChild(carouselCaption);
    
                    // Append carousel item to carousel inner container
                    carouselInner.appendChild(carouselItem);
                });
    
                // Add event listeners to handle carousel navigation
                const carousel = document.querySelector('.carousel');
                carousel.addEventListener('slid.bs.carousel', function () {
                    const activeItem = carousel.querySelector('.carousel-item.active');
                    const index = Array.from(activeItem.parentNode.children).indexOf(activeItem);
                    if (index === posts.length - 1) {
                        // Last slide reached, fetch more posts if needed
                        // For now, let's assume posts are static
                    }
                });
            })
            .catch(function(error) {
                console.error(error);
                alert('Failed to fetch posts. Please try again.');
            });
    </script>
    </body>
</html>